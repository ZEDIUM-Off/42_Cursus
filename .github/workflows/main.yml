on: [ push, pull_request ]

jobs:
    pushing-vogsphere:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
            -   name: Setup key
                uses: shimataro/ssh-key-action@v2
                with:
                    key: ${{ secrets.SSH_PRIVATE_KEY }}
                    known_hosts: ${{ secrets.KNOWN_HOSTS }}

            -   name: install norminette
                run: |
                    python3 -m pip install --upgrade pip setuptools && python3 -m pip install norminette

            -   name: install c-formatter
                run: pip3 install c-formatter-42

            -   name: Saving all changes
                run : |
                    git config --global user.email matisse.chenavas@gmail.com
                    git config --global user.name mchenava
                    make checkout-all
                    ./norm.bash
                    make save-all

            -   name: Clone libftTester
                uses: actions/checkout@v2
                with:
                    repository: Tripouille/libftTester
                    path: circle_0/_libft/libftTester

            -   name: Install Valgrind
                shell: bash
                run: sudo apt install valgrind

            -   name: Testing libft
                run : |
                    export error_found=0
                    export TERM=xterm #For tput from libftTester/Makefile
                    cd circle_0/_libft/libftTester
                    export funcnames=$(find ../ -type f -name "*.c" -print0 | xargs -I {} -0 -n1 bash -c "echo {} | rev | cut -c3- | rev | sed 's#../ft_##'")
                    for funcname in $funcnames; do
                        output=$(make $funcname)
                        echo "$(echo "$output" | grep OK)"
                        kos=$(echo "$output" | sed 's/KO you//g' | grep KO)
                        if [[ "$kos" != "" ]]; then echo "$kos"; error_found=1; fi
                    done
                    exit error_found
                    cat Makefile
                    make m = launch mandatory tests

